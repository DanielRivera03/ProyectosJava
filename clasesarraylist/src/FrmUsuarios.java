
import clasesarraylist.Usuarios;
import java.awt.event.KeyEvent;
import static java.lang.Integer.parseInt;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dany_
 */
public class FrmUsuarios extends javax.swing.JFrame {

    Usuarios usuarios;
    
    String correo;
    String nombre;
            String apellido;
            String clave;
            int nivel = -1;
            
    // LLENADO DE JTABLE EN TIEMPO DE EJECUCION
    DefaultTableModel dibujo;
    
    /**
     * Creates new form FrmUsuarios
     */
    public FrmUsuarios() {
        initComponents(); 
        usuarios = new Usuarios();
        dibujo = new DefaultTableModel(); // INSTANCIA DE JTABLE
        // LLENADO DE INFORMACION
        dibujo.addColumn("Correos");
        dibujo.addColumn("Nombres");
        dibujo.addColumn("Apellidos");
        dibujo.addColumn("Claves");
        dibujo.addColumn("Niveles");
        
        jTable1.setModel(dibujo); // LLENADO DE COLUMNAS
        
        mostrarDatosListado();
        
    }
    
    // MOSTRAR LISTADO DE USUARIOS
    public void mostrarDatosListado(){
        dibujo.setRowCount(0);
        // LLENADO DE FILAS
        for(int indice = 0; indice < usuarios.getCantidadUsuarios(); indice++){
            Vector fila = new Vector();
            fila.add(usuarios.getCorreos(indice));
            fila.add(usuarios.getNombres(indice));
            fila.add(usuarios.getApellidos(indice));
            fila.add(usuarios.getClave(indice));
            //fila.add(usuarios.getNiveles(indice));
            fila.add(usuarios.getNombreNiveles(indice));
            
            
            // MOSTRAR TODOS LOS REGISTROS A USUARIOS
            dibujo.addRow(fila);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rdbUsuario = new javax.swing.JRadioButton();
        rdbAsistente = new javax.swing.JRadioButton();
        rdbAdministrador = new javax.swing.JRadioButton();
        txtCorreo = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtClave = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnListado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel1.setText("Correo:");

        jLabel2.setText("Nombres:");

        jLabel3.setText("Apellidos:");

        jLabel4.setText("Contrase√±a:");

        buttonGroup1.add(rdbUsuario);
        rdbUsuario.setSelected(true);
        rdbUsuario.setText("Usuario");

        buttonGroup1.add(rdbAsistente);
        rdbAsistente.setText("Asistente");

        buttonGroup1.add(rdbAdministrador);
        rdbAdministrador.setText("Administrador");

        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorreoKeyPressed(evt);
            }
        });

        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombresKeyPressed(evt);
            }
        });

        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidosKeyPressed(evt);
            }
        });

        txtClave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtClaveKeyPressed(evt);
            }
        });

        jLabel5.setText("Rol de Usuario:");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnListado.setText("Listado");
        btnListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCorreo)
                                .addComponent(txtNombres)
                                .addComponent(txtApellidos)
                                .addComponent(txtClave)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rdbUsuario)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 189, Short.MAX_VALUE)
                                    .addComponent(rdbAsistente)
                                    .addGap(181, 181, 181)
                                    .addComponent(rdbAdministrador)
                                    .addGap(89, 89, 89)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnGuardar)
                                .addGap(103, 103, 103)
                                .addComponent(btnBuscar)
                                .addGap(102, 102, 102)
                                .addComponent(btnEliminar)
                                .addGap(80, 80, 80)
                                .addComponent(btnActualizar)
                                .addGap(54, 54, 54)
                                .addComponent(btnListado)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addComponent(jLabel5)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdbUsuario)
                            .addComponent(rdbAsistente)
                            .addComponent(rdbAdministrador)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnBuscar)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar)
                    .addComponent(btnListado))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        if(txtCorreo.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Lo sentimos, debe ingresar un correo para buscar un usuario...");
       }else{
            String elCorreoBuscar = txtCorreo.getText().toString();
            boolean estado = usuarios.ValidarCorreo(elCorreoBuscar);
            if(estado){
                int indice = usuarios.getIndice(elCorreoBuscar);
                txtCorreo.setText(usuarios.getCorreos(indice));
                txtNombres.setText(usuarios.getNombres(indice));
                txtApellidos.setText(usuarios.getApellidos(indice));
                txtClave.setText(usuarios.getClave(indice)); 
                int nivel = usuarios.getNiveles(indice);
                if(nivel == 1){
                    rdbUsuario.setSelected(true);
                }
                else if(nivel == 2){
                    rdbAsistente.setSelected(true);
                }
                else{
                    rdbAdministrador.setSelected(true);
                }
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "No existe el correo");
            }
       }// CIERRE if(txtCorreo.getText().isEmpty())       
    }//GEN-LAST:event_btnBuscarActionPerformed

    // GUARDAR USUARIOS
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        // CAPTURA DE DATOS
        setCampos();
        // PARA VALIDAR ABSOLUTAMENTE TODOS LOS CAMPOS -> SI SE DESEA UN MENSAJE PERSONALIZADO POR CADA CAMPO... SE TIENE QUE VALIDAR UNO A UNO
        if(txtCorreo.getText().isEmpty() || txtNombres.getText().isEmpty() || txtApellidos.getText().isEmpty() || txtClave.getText().isEmpty()){
         JOptionPane.showMessageDialog(rootPane, "Lo sentimos, todos los campos son requeridos");   
        }else{
            boolean estadoCorreo = usuarios.ValidarCorreo(correo);
            if(estadoCorreo){
                JOptionPane.showMessageDialog(rootPane, "Lo sentimos, este correo ya existe");
            }else{

                usuarios.setRegistroNuevosUsuarios(correo, nombre, apellido, clave, nivel);
                setLimpiarFormulario(); // LIMPIAR DATOS
                JOptionPane.showMessageDialog(rootPane, "Usuario registrado con exito");
                mostrarDatosListado();
            }
        }
        // VERIFICAR SI CORREO EXISTE
        
    }//GEN-LAST:event_btnGuardarActionPerformed
    // LIMPIAR DATOS DE FORMULARIO
    public void setLimpiarFormulario(){
        txtCorreo.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtClave.setText("");
        rdbUsuario.setSelected(true);
        txtCorreo.requestFocus();
    }
    
    // OBTENER REGISTROS DE LOS INPUT FORMULARIO
    public void setCampos(){
        correo = txtCorreo.getText().toString();
        nombre = txtNombres.getText().toString();
        apellido = txtApellidos.getText().toString();
        clave = txtClave.getText().toString();
        nivel = -1; // NIVEL NO DETERMINADO
        if(rdbUsuario.isSelected()){
            nivel = 1;
        }
        else if(rdbAsistente.isSelected()){
            nivel = 2;
        }
        // SI NO SE SELECCIONA NINGUN CHECKBOX POR DEFECTO
        /*else if(rdbAdministrador.isSelected()){
            nivel = 3;
        }else{
            JOptionPane.showMessageDialog(rootPane, "Seleccionar un nivel de usuario");
        }*/
        else{
            nivel = 3;
        }
    }
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void txtCorreoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyPressed
        // PARA PASAR A OTRO INPUT CON ENTER
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtNombres.requestFocus();   
        }
    }//GEN-LAST:event_txtCorreoKeyPressed

    private void txtNombresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyPressed
        // TODO add your handling code here:
        // PARA PASAR A OTRO INPUT CON ENTER
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtApellidos.requestFocus();   
        }
    }//GEN-LAST:event_txtNombresKeyPressed

    private void txtApellidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyPressed
        // TODO add your handling code here:
        // PARA PASAR A OTRO INPUT CON ENTER
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtClave.requestFocus();   
        }
    }//GEN-LAST:event_txtApellidosKeyPressed

    private void txtClaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClaveKeyPressed
        // TODO add your handling code here:
        // PARA PASAR A OTRO INPUT CON ENTER
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtCorreo.requestFocus();   
        }
    }//GEN-LAST:event_txtClaveKeyPressed

    // ELIMINAR USUARIOS
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(txtCorreo.getText().isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Lo sentimos, debe ingresar un correo de un usuario para eliminar un registro...");
       }else{
            if (JOptionPane.showConfirmDialog(rootPane, "Se eliminar√° el registro, ¬ødesea continuar?",
            "Eliminar Registro", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                 EliminarDatosUsuarios();
                 mostrarDatosListado();
       }
    }//GEN-LAST:event_btnEliminarActionPerformed

    // MODIFICAR USUARIOS
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        if(txtCorreo.getText().isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Lo sentimos, debe ingresar un correo de un usuario para modificar un registro...");
       }else{
            setCampos();
            int indiceActualizar = usuarios.getIndice(correo);
            usuarios.ActualizarUsuario(indiceActualizar, nombre, apellido, clave, nivel);
            setLimpiarFormulario();
            mostrarDatosListado();
       }// CIERRE if(txtCorreo.getText().isEmpty())
    }//GEN-LAST:event_btnActualizarActionPerformed

    // PASAR DATOS DE LA JTABLE A LOS CAMPOS
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        txtCorreo.setText(jTable1.getValueAt(jTable1.getSelectedRow() ,0).toString());
        txtNombres.setText(jTable1.getValueAt(jTable1.getSelectedRow() ,1).toString());
        txtApellidos.setText(jTable1.getValueAt(jTable1.getSelectedRow() ,2).toString());
        txtClave.setText(jTable1.getValueAt(jTable1.getSelectedRow() , 3).toString());
        //int NivelSeleccionado = Integer.valueOf(jTable1.getValueAt( jTable1.getSelectedRow() , 4).toString()); // PARA MOSTRAR CODIGO UNICO EXPLICITAMENTE EN LISTADO
        // PARA MOSTRAR DESCRIPCION DE NIVEL DE USUARIO
        String NivelSeleccionado = String.valueOf(jTable1.getValueAt( jTable1.getSelectedRow() , 4)); 
        if(NivelSeleccionado.equals("Usuario")){
            rdbUsuario.setSelected(true);
            //return Integer.valueOf(parseInt(s, 10)); -> REFERENCIA PARA CONVERTIR A OTROS TIPOS DE DATOS
        }else if(NivelSeleccionado.equals("Asistente")){
            rdbAsistente.setSelected(true);
        }else if(NivelSeleccionado.equals("Administrador")){
            rdbAdministrador.setSelected(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListadoActionPerformed
        // TODO add your handling code here:
        FrmListadoUsuarios frmListadoUsuarios = new FrmListadoUsuarios();
        frmListadoUsuarios.setVisible(true);
    }//GEN-LAST:event_btnListadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUsuarios().setVisible(true);
            }
        });
    }
    
    // ELIMINAR USUARIOS -> SEPARADO EN METODO PARA HACER MENOS EXTENSO LA VENTANA DE CONFIRMACION DE DEPURACION DE REGISTRO
    public void EliminarDatosUsuarios(){
        String correoEliminar = txtCorreo.getText().toString();
        if(usuarios.ValidarCorreo(correoEliminar)){
            int indiceCorreoEliminar = usuarios.getIndice(correoEliminar);
            boolean estadoEliminado = usuarios.borrarUsuario(indiceCorreoEliminar);
            if(estadoEliminado){
                JOptionPane.showMessageDialog(rootPane, "Usuario elimado con exito");
                setLimpiarFormulario();
            }else{
                JOptionPane.showMessageDialog(rootPane, "No se elimino el usuario");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Correo no existe");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnListado;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public static javax.swing.JRadioButton rdbAdministrador;
    public static javax.swing.JRadioButton rdbAsistente;
    public static javax.swing.JRadioButton rdbUsuario;
    public static javax.swing.JTextField txtApellidos;
    public static javax.swing.JTextField txtClave;
    public static javax.swing.JTextField txtCorreo;
    public static javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
